/*
Automated Archival API

APIs to manipulate automated archival settings and exempt metrics

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package automated_archival

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AutomatedArchivalSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutomatedArchivalSettings{}

// AutomatedArchivalSettings struct for AutomatedArchivalSettings
type AutomatedArchivalSettings struct {
	Creator *string `json:"creator,omitempty"`
	LastUpdatedBy *string `json:"lastUpdatedBy,omitempty"`
	Created *int64 `json:"created,omitempty"`
	LastUpdated *int64 `json:"lastUpdated,omitempty"`
	OrgId *string `json:"orgId,omitempty"`
	Version int64 `json:"version"`
	Enabled bool `json:"enabled"`
	LookbackPeriod string `json:"lookbackPeriod"`
	GracePeriod string `json:"gracePeriod"`
	RulesetLimit *int32 `json:"rulesetLimit,omitempty"`
}

type _AutomatedArchivalSettings AutomatedArchivalSettings

// NewAutomatedArchivalSettings instantiates a new AutomatedArchivalSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutomatedArchivalSettings(version int64, enabled bool, lookbackPeriod string, gracePeriod string) *AutomatedArchivalSettings {
	this := AutomatedArchivalSettings{}
	this.Version = version
	this.Enabled = enabled
	this.LookbackPeriod = lookbackPeriod
	this.GracePeriod = gracePeriod
	return &this
}

// NewAutomatedArchivalSettingsWithDefaults instantiates a new AutomatedArchivalSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutomatedArchivalSettingsWithDefaults() *AutomatedArchivalSettings {
	this := AutomatedArchivalSettings{}
	return &this
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *AutomatedArchivalSettings) GetCreator() string {
	if o == nil || IsNil(o.Creator) {
		var ret string
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedArchivalSettings) GetCreatorOk() (*string, bool) {
	if o == nil || IsNil(o.Creator) {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *AutomatedArchivalSettings) HasCreator() bool {
	if o != nil && !IsNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given string and assigns it to the Creator field.
func (o *AutomatedArchivalSettings) SetCreator(v string) {
	o.Creator = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *AutomatedArchivalSettings) GetLastUpdatedBy() string {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret string
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedArchivalSettings) GetLastUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *AutomatedArchivalSettings) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given string and assigns it to the LastUpdatedBy field.
func (o *AutomatedArchivalSettings) SetLastUpdatedBy(v string) {
	o.LastUpdatedBy = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *AutomatedArchivalSettings) GetCreated() int64 {
	if o == nil || IsNil(o.Created) {
		var ret int64
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedArchivalSettings) GetCreatedOk() (*int64, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *AutomatedArchivalSettings) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given int64 and assigns it to the Created field.
func (o *AutomatedArchivalSettings) SetCreated(v int64) {
	o.Created = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *AutomatedArchivalSettings) GetLastUpdated() int64 {
	if o == nil || IsNil(o.LastUpdated) {
		var ret int64
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedArchivalSettings) GetLastUpdatedOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *AutomatedArchivalSettings) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given int64 and assigns it to the LastUpdated field.
func (o *AutomatedArchivalSettings) SetLastUpdated(v int64) {
	o.LastUpdated = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *AutomatedArchivalSettings) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedArchivalSettings) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *AutomatedArchivalSettings) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *AutomatedArchivalSettings) SetOrgId(v string) {
	o.OrgId = &v
}

// GetVersion returns the Version field value
func (o *AutomatedArchivalSettings) GetVersion() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *AutomatedArchivalSettings) GetVersionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *AutomatedArchivalSettings) SetVersion(v int64) {
	o.Version = v
}

// GetEnabled returns the Enabled field value
func (o *AutomatedArchivalSettings) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AutomatedArchivalSettings) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AutomatedArchivalSettings) SetEnabled(v bool) {
	o.Enabled = v
}

// GetLookbackPeriod returns the LookbackPeriod field value
func (o *AutomatedArchivalSettings) GetLookbackPeriod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LookbackPeriod
}

// GetLookbackPeriodOk returns a tuple with the LookbackPeriod field value
// and a boolean to check if the value has been set.
func (o *AutomatedArchivalSettings) GetLookbackPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LookbackPeriod, true
}

// SetLookbackPeriod sets field value
func (o *AutomatedArchivalSettings) SetLookbackPeriod(v string) {
	o.LookbackPeriod = v
}

// GetGracePeriod returns the GracePeriod field value
func (o *AutomatedArchivalSettings) GetGracePeriod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GracePeriod
}

// GetGracePeriodOk returns a tuple with the GracePeriod field value
// and a boolean to check if the value has been set.
func (o *AutomatedArchivalSettings) GetGracePeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GracePeriod, true
}

// SetGracePeriod sets field value
func (o *AutomatedArchivalSettings) SetGracePeriod(v string) {
	o.GracePeriod = v
}

// GetRulesetLimit returns the RulesetLimit field value if set, zero value otherwise.
func (o *AutomatedArchivalSettings) GetRulesetLimit() int32 {
	if o == nil || IsNil(o.RulesetLimit) {
		var ret int32
		return ret
	}
	return *o.RulesetLimit
}

// GetRulesetLimitOk returns a tuple with the RulesetLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedArchivalSettings) GetRulesetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.RulesetLimit) {
		return nil, false
	}
	return o.RulesetLimit, true
}

// HasRulesetLimit returns a boolean if a field has been set.
func (o *AutomatedArchivalSettings) HasRulesetLimit() bool {
	if o != nil && !IsNil(o.RulesetLimit) {
		return true
	}

	return false
}

// SetRulesetLimit gets a reference to the given int32 and assigns it to the RulesetLimit field.
func (o *AutomatedArchivalSettings) SetRulesetLimit(v int32) {
	o.RulesetLimit = &v
}

func (o AutomatedArchivalSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutomatedArchivalSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	toSerialize["version"] = o.Version
	toSerialize["enabled"] = o.Enabled
	toSerialize["lookbackPeriod"] = o.LookbackPeriod
	toSerialize["gracePeriod"] = o.GracePeriod
	if !IsNil(o.RulesetLimit) {
		toSerialize["rulesetLimit"] = o.RulesetLimit
	}
	return toSerialize, nil
}

func (o *AutomatedArchivalSettings) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"version",
		"enabled",
		"lookbackPeriod",
		"gracePeriod",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutomatedArchivalSettings := _AutomatedArchivalSettings{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutomatedArchivalSettings)

	if err != nil {
		return err
	}

	*o = AutomatedArchivalSettings(varAutomatedArchivalSettings)

	return err
}

type NullableAutomatedArchivalSettings struct {
	value *AutomatedArchivalSettings
	isSet bool
}

func (v NullableAutomatedArchivalSettings) Get() *AutomatedArchivalSettings {
	return v.value
}

func (v *NullableAutomatedArchivalSettings) Set(val *AutomatedArchivalSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableAutomatedArchivalSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableAutomatedArchivalSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutomatedArchivalSettings(val *AutomatedArchivalSettings) *NullableAutomatedArchivalSettings {
	return &NullableAutomatedArchivalSettings{value: val, isSet: true}
}

func (v NullableAutomatedArchivalSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutomatedArchivalSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


