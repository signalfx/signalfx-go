/*
APM service topology API

APIs to retrieve the upstream and downstream dependencies for a given service, as well as to retrieve the complete graph-based topology of all services in a given environment and time window. You can also use tagFilters to filter this topology by indexed span tags.  To learn about example use cases for this API, see [Retrieve service topology](https://dev.splunk.com/observability/docs/apm/service-topology/) in the developer guide.    ## Requirements  * You must have an organization access token with the API permission or a session token to use the API. * You have to have the Splunk Observability Cloud admin, power, or read_only role to use the APM Service Topology endpoints. 

API version: 3.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
)

// checks if the RetrieveDependenciesByServiceName200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RetrieveDependenciesByServiceName200Response{}

// RetrieveDependenciesByServiceName200Response struct for RetrieveDependenciesByServiceName200Response
type RetrieveDependenciesByServiceName200Response struct {
	// For a specific service, a list of the inbound services on which the service depends, in the form of a JSON array 
	Inbound []string `json:"inbound,omitempty"`
	// List of outbound dependencies 
	Outbound []string `json:"outbound,omitempty"`
	// List of detail objects for each outbound and inbound service 
	Services []Service `json:"services,omitempty"`
}

// NewRetrieveDependenciesByServiceName200Response instantiates a new RetrieveDependenciesByServiceName200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetrieveDependenciesByServiceName200Response() *RetrieveDependenciesByServiceName200Response {
	this := RetrieveDependenciesByServiceName200Response{}
	return &this
}

// NewRetrieveDependenciesByServiceName200ResponseWithDefaults instantiates a new RetrieveDependenciesByServiceName200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetrieveDependenciesByServiceName200ResponseWithDefaults() *RetrieveDependenciesByServiceName200Response {
	this := RetrieveDependenciesByServiceName200Response{}
	return &this
}

// GetInbound returns the Inbound field value if set, zero value otherwise.
func (o *RetrieveDependenciesByServiceName200Response) GetInbound() []string {
	if o == nil || IsNil(o.Inbound) {
		var ret []string
		return ret
	}
	return o.Inbound
}

// GetInboundOk returns a tuple with the Inbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveDependenciesByServiceName200Response) GetInboundOk() ([]string, bool) {
	if o == nil || IsNil(o.Inbound) {
		return nil, false
	}
	return o.Inbound, true
}

// HasInbound returns a boolean if a field has been set.
func (o *RetrieveDependenciesByServiceName200Response) HasInbound() bool {
	if o != nil && !IsNil(o.Inbound) {
		return true
	}

	return false
}

// SetInbound gets a reference to the given []string and assigns it to the Inbound field.
func (o *RetrieveDependenciesByServiceName200Response) SetInbound(v []string) {
	o.Inbound = v
}

// GetOutbound returns the Outbound field value if set, zero value otherwise.
func (o *RetrieveDependenciesByServiceName200Response) GetOutbound() []string {
	if o == nil || IsNil(o.Outbound) {
		var ret []string
		return ret
	}
	return o.Outbound
}

// GetOutboundOk returns a tuple with the Outbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveDependenciesByServiceName200Response) GetOutboundOk() ([]string, bool) {
	if o == nil || IsNil(o.Outbound) {
		return nil, false
	}
	return o.Outbound, true
}

// HasOutbound returns a boolean if a field has been set.
func (o *RetrieveDependenciesByServiceName200Response) HasOutbound() bool {
	if o != nil && !IsNil(o.Outbound) {
		return true
	}

	return false
}

// SetOutbound gets a reference to the given []string and assigns it to the Outbound field.
func (o *RetrieveDependenciesByServiceName200Response) SetOutbound(v []string) {
	o.Outbound = v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *RetrieveDependenciesByServiceName200Response) GetServices() []Service {
	if o == nil || IsNil(o.Services) {
		var ret []Service
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveDependenciesByServiceName200Response) GetServicesOk() ([]Service, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *RetrieveDependenciesByServiceName200Response) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given []Service and assigns it to the Services field.
func (o *RetrieveDependenciesByServiceName200Response) SetServices(v []Service) {
	o.Services = v
}

func (o RetrieveDependenciesByServiceName200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RetrieveDependenciesByServiceName200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Inbound) {
		toSerialize["inbound"] = o.Inbound
	}
	if !IsNil(o.Outbound) {
		toSerialize["outbound"] = o.Outbound
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	return toSerialize, nil
}

type NullableRetrieveDependenciesByServiceName200Response struct {
	value *RetrieveDependenciesByServiceName200Response
	isSet bool
}

func (v NullableRetrieveDependenciesByServiceName200Response) Get() *RetrieveDependenciesByServiceName200Response {
	return v.value
}

func (v *NullableRetrieveDependenciesByServiceName200Response) Set(val *RetrieveDependenciesByServiceName200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRetrieveDependenciesByServiceName200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRetrieveDependenciesByServiceName200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetrieveDependenciesByServiceName200Response(val *RetrieveDependenciesByServiceName200Response) *NullableRetrieveDependenciesByServiceName200Response {
	return &NullableRetrieveDependenciesByServiceName200Response{value: val, isSet: true}
}

func (v NullableRetrieveDependenciesByServiceName200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetrieveDependenciesByServiceName200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


