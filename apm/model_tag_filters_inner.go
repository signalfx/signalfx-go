/*
APM service topology API

APIs to retrieve the upstream and downstream dependencies for a given service, as well as to retrieve the complete graph-based topology of all services in a given environment and time window. You can also use tagFilters to filter this topology by indexed span tags.  To learn about example use cases for this API, see [Retrieve service topology](https://dev.splunk.com/observability/docs/apm/service-topology/) in the developer guide.    ## Requirements  * You must have an organization access token with the API permission or a session token to use the API. * You have to have the Splunk Observability Cloud admin, power, or read_only role to use the APM Service Topology endpoints. 

API version: 3.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apm

import (
	"encoding/json"
	"fmt"
)


// TagFiltersInner struct for TagFiltersInner
type TagFiltersInner struct {
	EqualsTagFilter *EqualsTagFilter
	InTagFilter *InTagFilter
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *TagFiltersInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into EqualsTagFilter
	err = json.Unmarshal(data, &dst.EqualsTagFilter);
	if err == nil {
		jsonEqualsTagFilter, _ := json.Marshal(dst.EqualsTagFilter)
		if string(jsonEqualsTagFilter) == "{}" { // empty struct
			dst.EqualsTagFilter = nil
		} else {
			return nil // data stored in dst.EqualsTagFilter, return on the first match
		}
	} else {
		dst.EqualsTagFilter = nil
	}

	// try to unmarshal JSON data into InTagFilter
	err = json.Unmarshal(data, &dst.InTagFilter);
	if err == nil {
		jsonInTagFilter, _ := json.Marshal(dst.InTagFilter)
		if string(jsonInTagFilter) == "{}" { // empty struct
			dst.InTagFilter = nil
		} else {
			return nil // data stored in dst.InTagFilter, return on the first match
		}
	} else {
		dst.InTagFilter = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(TagFiltersInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src TagFiltersInner) MarshalJSON() ([]byte, error) {
	if src.EqualsTagFilter != nil {
		return json.Marshal(&src.EqualsTagFilter)
	}

	if src.InTagFilter != nil {
		return json.Marshal(&src.InTagFilter)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableTagFiltersInner struct {
	value *TagFiltersInner
	isSet bool
}

func (v NullableTagFiltersInner) Get() *TagFiltersInner {
	return v.value
}

func (v *NullableTagFiltersInner) Set(val *TagFiltersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTagFiltersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTagFiltersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagFiltersInner(val *TagFiltersInner) *NullableTagFiltersInner {
	return &NullableTagFiltersInner{value: val, isSet: true}
}

func (v NullableTagFiltersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagFiltersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


